# This file is deployed and managed by Tuleap.
# DO NOT EDIT.

set $reject_request_for_resource_isolation 1;

# Exclude API calls from the global resource isolation
if ($request_uri ~ ^/api) {
    set $reject_request_for_resource_isolation 0;
}
if ($request_uri ~ ^/api/explorer) {
    set $reject_request_for_resource_isolation 1;
}
# Exclude upload calls from the global resource isolation, most/all of them can be issued by an API call
if ($request_uri ~ ^/uploads/) {
    set $reject_request_for_resource_isolation 0;
}

# Allow requests from browsers/tools that does not send Fetch Metadata headers
if ($http_sec_fetch_site = "") {
    set $reject_request_for_resource_isolation 0;
}

# Allow requests coming from a user-originated operation (e.g. typing the URL in the browser bar)
if ($http_sec_fetch_site = "none") {
    set $reject_request_for_resource_isolation 0;
}

# Allow requests coming from the same origin
if ($http_sec_fetch_site = "same-origin") {
    set $reject_request_for_resource_isolation 0;
}

# Allow direct navigation requests
set $allowed_navigation_requests 0;
if ($http_sec_fetch_mode = "navigate") {
    set $allowed_navigation_requests 1;
}

# Reject navigation requests coming from unexpected/"known to be an issue" sources
if ($request_method !~ ^(GET|HEAD)$) {
    set $allowed_navigation_requests 0;
}
if ($http_sec_fetch_dest = "iframe") {
    set $allowed_navigation_requests 0;
}
if ($http_sec_fetch_dest = "object") {
    set $allowed_navigation_requests 0;
}
if ($http_sec_fetch_dest = "worker") {
    set $allowed_navigation_requests 0;
}
if ($http_sec_fetch_dest = "serviceworker") {
    set $allowed_navigation_requests 0;
}
if ($http_sec_fetch_dest = "sharedworker") {
    set $allowed_navigation_requests 0;
}

if ($allowed_navigation_requests) {
    set $reject_request_for_resource_isolation 0;
}

# Allow requests coming from images
# It would be preferable to only allow the static/assets images
# but it reduces the risk of breakages for external integrations
# and it is a good first step
if ($http_sec_fetch_dest = "image") {
    set $reject_request_for_resource_isolation 0;
}

# Requests that are not allowed are rejected with a 403 and error message in the body
set $reject_resource_isolation_content_type "";
set $reject_resource_isolation_cache_control "";

if ($reject_request_for_resource_isolation) {
    set $reject_resource_isolation_content_type "text/plain;charset=utf-8";
    set $reject_resource_isolation_cache_control "no-cache";
    return 403 "Request has been rejected based on its Fetch Metadata headers";
}

add_header Content-Type $reject_resource_isolation_content_type always;
add_header Cache-Control $reject_resource_isolation_cache_control always;

if ($reject_request_for_resource_isolation) {
    break;
}
