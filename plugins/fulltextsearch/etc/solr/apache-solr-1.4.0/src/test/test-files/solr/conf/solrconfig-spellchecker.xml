<?xml version="1.0" ?>
<!--
 Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-->

<config>
  <indexDefaults>
    <useCompoundFile>false</useCompoundFile>
    <mergeFactor>10</mergeFactor>
    <maxBufferedDocs>1000</maxBufferedDocs>
    <maxMergeDocs>2147483647</maxMergeDocs>
    <maxFieldLength>10000</maxFieldLength>
    <writeLockTimeout>1000</writeLockTimeout>
    <commitLockTimeout>10000</commitLockTimeout>
  </indexDefaults>

  <mainIndex>
    <useCompoundFile>false</useCompoundFile>
    <mergeFactor>10</mergeFactor>
    <maxBufferedDocs>1000</maxBufferedDocs>
    <maxMergeDocs>2147483647</maxMergeDocs>
    <maxFieldLength>10000</maxFieldLength>
    <unlockOnStartup>true</unlockOnStartup>
  </mainIndex>


  <updateHandler class="solr.DirectUpdateHandler2">
    <commitIntervalLowerBound>0</commitIntervalLowerBound>
  </updateHandler>


  <query>
    <maxBooleanClauses>1024</maxBooleanClauses>
    <useFilterForSortedQuery>true</useFilterForSortedQuery>
    <queryResultWindowSize>10</queryResultWindowSize>
    <HashDocSet maxSize="3000" loadFactor="0.75"/>
    <boolTofilterOptimizer enabled="true" cacheSize="32" threshold=".05"/>
  </query>
  

 
  <requestHandler name="standard" class="solr.StandardRequestHandler" />
  <requestHandler name="/update" class="solr.XmlUpdateRequestHandler" />


  <!-- SpellCheckerRequestHandler takes in a word (or several words) as the
       value of the "q" parameter and returns a list of alternative spelling
       suggestions.  If invoked with a ...&cmd=rebuild, it will rebuild the
       spellchecker index.
  -->
  <requestHandler name="spellchecker" class="solr.SpellCheckerRequestHandler" startup="lazy">
    <!-- default values for query parameters -->
     <lst name="defaults">
       <int name="sp.query.suggestionCount">20</int>
       <float name="sp.query.accuracy">0.60</float>
     </lst>
     
     <!-- Main init params for handler -->
     
     <!-- The directory where your SpellChecker Index should live.   -->
     <!-- May be absolute, or relative to the Solr "dataDir" directory. -->
     <!-- If this option is not specified, a RAM directory will be used -->
     <str name="sp.dictionary.spellcheckerIndexDir">spell</str>
     
     <!-- the field in your schema that you want to be able to build -->
     <!-- your spell index on. This should be a field that uses a very -->
     <!-- simple FieldType without a lot of Analysis (ie: string) -->
     <str name="sp.dictionary.termSourceField">spell</str>

     <!-- threshold for word to make it into the dictionary -->
     <!-- a word should appear at minimum in the specified precent of documents -->
     <str name="sp.dictionary.threshold">0.0</str>

   </requestHandler>

  

  <queryResponseWriter name="standard" class="org.apache.solr.request.XMLResponseWriter"/>
  <queryResponseWriter name="useless" class="org.apache.solr.OutputWriterTest$UselessOutputWriter"/>
  <queryResponseWriter name="xslt" class="org.apache.solr.request.XSLTResponseWriter"/>
  <queryResponseWriter name="json" class="org.apache.solr.request.JSONResponseWriter"/>

    
  <!-- config for the admin interface --> 
  <admin>
    <defaultQuery>solr</defaultQuery>
    <gettableFiles>solrconfig.xml schema.xml admin-extra.html</gettableFiles>
  </admin>

</config>
