<?php
/* 
 * Copyright (c) STMicroelectronics, 2006. All Rights Reserved.
 *
 * Originally written by Nicolas Terray, 2006
 *
 * This file is a part of CodeX.
 *
 * CodeX is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * CodeX is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with CodeX; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 *
 * $Id$
 */
require_once('Docman_View_ItemDetailsSectionActions.class');
require_once('Docman_View_ParentsTree.class');

require_once(dirname(__FILE__).'/../Docman_ItemBo.class');
class Docman_View_ItemDetailsSectionMoveSelect extends Docman_View_ItemDetailsSectionActions {
    var $selected_parent;
    function Docman_View_ItemDetailsSectionMoveSelect(&$item, &$selected_parent, $url, &$controller, $params) {
        parent::Docman_View_ItemDetailsSectionActions($item, $url, false, true, $controller);
        $this->params = $params;
        $this->selected_parent =& $selected_parent;
    }
    function getContent() {
        $content = '';
        $content .= '<dl><dt>'. $GLOBALS['Language']->getText('plugin_docman', 'details_actions_move') .'</dt><dd>';
        $content .= '<form action="'. $this->url .'" method="POST">';
        $content .=  $GLOBALS['Language']->getText('plugin_docman', 'move_descr3', array($this->item->getTitle(), $this->selected_parent->getTitle()));
        
        $content .= '<div style="padding-left:20px;"><select name="ordering">';
        $at_the_beginning = false;
        $itemBo = new Docman_ItemBo($this->params['docman'], $this->params['group_id']);
        $itemTree =& $itemBo->getItemSubTree($this->selected_parent->getId(), array('user' => $this->params['user']));
        $items =& $itemTree->getAllItems();
        $iter =& $items->iterator();
        while($iter->valid()) {
            $i =& $iter->current();
            if (!$at_the_beginning) {
                $content .= '<option value="'.($i->getRank()-1).'">'. $GLOBALS['Language']->getText('plugin_docman', 'move_position_beginning') .'</option>'."\n";
                $at_the_beginning = true;
            }
            if ($i->getId() != $this->item->getId()) {
                $content .= '<option value="'.($i->getRank()+1).'">'. $GLOBALS['Language']->getText('plugin_docman', 'move_after', array($i->getTitle())) .'</option>'."\n";
            }
            $iter->next();
        }
        $content .= '</select></div>';
        
        $content .=  '<br />';
        
        
        //submit
        $content .= '<div>';
        $content .= '<input type="hidden" name="action" value="move_here" />';
        $content .= '<input type="hidden" name="id" value="'. $this->selected_parent->getId() .'" />';
        $content .= '<input type="hidden" name="item_to_move" value="'. $this->item->getId() .'" />';
        $content .= '<input type="submit" name="cancel" value="'. $GLOBALS['Language']->getText('global', 'btn_cancel') .'" />';
        $content .= '<input type="submit" name="confirm" value="'. $GLOBALS['Language']->getText('global', 'btn_submit') .'" />';
        $content .= '</div></form>';
        $content .= '</dd></dl>';
        return $content;
    }
    /* protected */ function _getJSDocmanParameters() {
        return array('action' => 'move');
    }
}
?>
