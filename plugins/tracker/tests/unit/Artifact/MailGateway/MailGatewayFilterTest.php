<?php
/**
 * Copyright (c) Enalean, 2017-Present. All Rights Reserved.
 *
 * This file is a part of Tuleap.
 *
 * Tuleap is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * Tuleap is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with Tuleap. If not, see <http://www.gnu.org/licenses/>.
 */

declare(strict_types=1);

namespace Tuleap\Tracker\Artifact\MailGateway;

use Tuleap\Test\PHPUnit\TestCase;

final class MailGatewayFilterTest extends TestCase
{
    private MailGatewayFilter $mail_filter;

    protected function setUp(): void
    {
        $this->mail_filter = new MailGatewayFilter();
    }

    public function testItReturnsTrueWhenAutoReplyIsSetToAutoGenerated(): void
    {
        $incoming_mail = $this->createMock(IncomingMail::class);
        $incoming_mail->method('getHeaderValue')->with('auto-submitted')->willReturn('auto-generated');
        self::assertTrue($this->mail_filter->isAnAutoReplyMail($incoming_mail));
    }

    public function testItReturnsFalseWhenAutoReplyIsSetToNoValue(): void
    {
        $incoming_mail = $this->createMock(IncomingMail::class);
        $incoming_mail->method('getHeaderValue')->willReturnCallback(static fn(string $key) => match ($key) {
            'auto-submitted' => 'no',
            'return-path'    => false,
        });
        self::assertFalse($this->mail_filter->isAnAutoReplyMail($incoming_mail));
    }

    public function testItReturnsTrueWhenReturnPathIsNotSet(): void
    {
        $incoming_mail = $this->createMock(IncomingMail::class);
        $incoming_mail->method('getHeaderValue')->willReturnCallback(static fn(string $key) => match ($key) {
            'auto-submitted' => 'no',
            'return-path'    => '<>',
        });
        self::assertTrue($this->mail_filter->isAnAutoReplyMail($incoming_mail));
    }

    public function testItReturnsFalseWhenReturnPathIsSet(): void
    {
        $incoming_mail = $this->createMock(IncomingMail::class);
        $incoming_mail->method('getHeaderValue')->willReturnCallback(static fn(string $key) => match ($key) {
            'auto-submitted' => 'no',
            'return-path'    => '<mail@example.com>',
        });
        self::assertFalse($this->mail_filter->isAnAutoReplyMail($incoming_mail));
    }

    public function testItReturnsTrueWhenAutoReplyIsAutoGeneratedAndPathIsSet(): void
    {
        $incoming_mail = $this->createMock(IncomingMail::class);
        $incoming_mail->method('getHeaderValue')->willReturnCallback(static fn(string $key) => match ($key) {
            'auto-submitted' => 'auto-generated',
            'return-path'    => '<mail@example.com>',
        });
        self::assertTrue($this->mail_filter->isAnAutoReplyMail($incoming_mail));
    }
}
